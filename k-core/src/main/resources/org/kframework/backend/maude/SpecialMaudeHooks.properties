# This file contains equations in Maude for hooks definitions
# which don't conform to the default pattern.
\#K-EQUAL\:_\=\=K_ : eq '_==K_(GeneratedAnonVar132:K,, GeneratedAnonVar133:K)  = _`(_`)(# _==K_(GeneratedAnonVar132:K , GeneratedAnonVar133:K ), .KList) .
\#INT\:_/Int_ : eq '_/Int_(_`(_`)(#_(GeneratedAnonVar30:#Int), .KList) ,, _`(_`)(#_(GeneratedAnonVar31:#NzInt), .KList) ) = _`(_`)(# _/Int_(GeneratedAnonVar30:#Int , GeneratedAnonVar31:#NzInt ), .KList) .
\#INT\:_%Int_ : eq '_%Int_(_`(_`)(#_(GeneratedAnonVar30:#Int), .KList) ,, _`(_`)(#_(GeneratedAnonVar31:#NzInt), .KList) ) = _`(_`)(# _%Int_(GeneratedAnonVar30:#Int , GeneratedAnonVar31:#NzInt ), .KList) .
\#INT\:_^Int_ : eq '_^Int_(_`(_`)(#_(GeneratedAnonVar30:#Int), .KList) ,, _`(_`)(#_(GeneratedAnonVar31:#Nat), .KList) ) = _`(_`)(# _^Int_(GeneratedAnonVar30:#Int , GeneratedAnonVar31:#Nat ), .KList) .
\#INT\:_>>Int_ : eq '_>>Int_(_`(_`)(#_(GeneratedAnonVar30:#Int), .KList) ,, _`(_`)(#_(GeneratedAnonVar31:#Nat), .KList) ) = _`(_`)(# _>>Int_(GeneratedAnonVar30:#Int , GeneratedAnonVar31:#Nat ), .KList) .
\#INT\:_<<Int_ : eq '_<<Int_(_`(_`)(#_(GeneratedAnonVar30:#Int), .KList) ,, _`(_`)(#_(GeneratedAnonVar31:#Nat), .KList) ) = _`(_`)(# _<<Int_(GeneratedAnonVar30:#Int , GeneratedAnonVar31:#Nat ), .KList) .
\#STRING\:ordChar : eq ordChar(_`(_`)(#_(GeneratedAnonVar88:#Char), .KList) ) = _`(_`)(# ordChar(GeneratedAnonVar88:#Char ), .KList) .
\#STRING\:substrString : eq substrString(_`(_`)(#_(GeneratedAnonVar90:#String), .KList) ,, _`(_`)(#_(GeneratedAnonVar91:#Nat), .KList) ,, _`(_`)(#_(GeneratedAnonVar92:#Nat), .KList) ) = _`(_`)(# substrString(GeneratedAnonVar90:#String , GeneratedAnonVar91:#Nat , GeneratedAnonVar92:#Nat ), .KList) .
\#STRING\:findString : eq findString(_`(_`)(#_(GeneratedAnonVar94:#String), .KList) ,, _`(_`)(#_(GeneratedAnonVar95:#String), .KList) ,, _`(_`)(#_(GeneratedAnonVar96:#Nat), .KList) ) = _`(_`)(# findString(GeneratedAnonVar94:#String , GeneratedAnonVar95:#String , GeneratedAnonVar96:#Nat ), .KList) .
\#STRING\:rfindString : eq rfindString(_`(_`)(#_(GeneratedAnonVar98:#String), .KList) ,, _`(_`)(#_(GeneratedAnonVar99:#String), .KList) ,, _`(_`)(#_(GeneratedAnonVar100:#Nat), .KList) ) = _`(_`)(# rfindString(GeneratedAnonVar98:#String , GeneratedAnonVar99:#String , GeneratedAnonVar100:#Nat ), .KList) .
\#STRING\:chrChar : ceq chrChar(_`(_`)(#_(GeneratedAnonVar86:#Nat), .KList) ) = _`(_`)(# chrChar(GeneratedAnonVar86:#Nat ), .KList) if GeneratedAnonVar86:#Nat <=Int 255 .
\#RANDOM\:randomRandom : eq randomRandom(_`(_`)(#_(GeneratedAnonVar135:#Nat), .KList) ) = _`(_`)(# randomRandom(GeneratedAnonVar135:#Nat ), .KList) .
\#FLOAT\:_/Float_ : ceq '_/Float_(_`(_`)(#_(GeneratedAnonVar44:#Float), .KList) ,, _`(_`)(#_(GeneratedAnonVar45:#Float), .KList) ) = _`(_`)(# _/Float_(GeneratedAnonVar44:#Float , GeneratedAnonVar45:#Float ), .KList) if GeneratedAnonVar45:#Float ==Float 0.0 = false .
\#FLOAT\:_%Float_ : ceq '_%Float_(_`(_`)(#_(GeneratedAnonVar46:#Float), .KList) ,, _`(_`)(#_(GeneratedAnonVar47:#Float), .KList) ) = _`(_`)(# _%Float_(GeneratedAnonVar46:#Float , GeneratedAnonVar47:#Float ), .KList) if GeneratedAnonVar47:#Float ==Float 0.0 = false .
\#FLOAT\:_^Float_ : ceq '_^Float_(_`(_`)(#_(GeneratedAnonVar46:#Float), .KList) ,, _`(_`)(#_(GeneratedAnonVar47:#Float), .KList) ) = _`(_`)(# _^Float_(GeneratedAnonVar46:#Float , GeneratedAnonVar47:#Float ), .KList) if GeneratedAnonVar46:#Float =/=Universal 0.0 or-else GeneratedAnonVar47:#Float >=Float 0.0 .
\#CONVERSION\:string2int : ceq String2Int(_`(_`)(#_(GeneratedAnonVar85:#String), .KList) ) = _`(_`)(# GeneratedAnonVar86:#Int, .KList) if GeneratedAnonVar86:#Int := string2int(GeneratedAnonVar85:#String) .
\#CONVERSION\:string2float : ceq String2Float(_`(_`)(#_(GeneratedAnonVar85:#String), .KList) ) = _`(_`)(# GeneratedAnonVar86:#Float, .KList) if GeneratedAnonVar86:#Float := string2Float(GeneratedAnonVar85:#String) .
\#K-PARSER\:string2k : eq 'String2K (_`(_`) (#_ (GeneratedAnonVar260:#String), .KList)) = string2k (GeneratedAnonVar260:#String) .
\#K-PARSER\:string2bag : eq String2Bag(_`(_`) (#_ (GeneratedAnonVar261:#String), .KList)) = string2bag (GeneratedAnonVar261:#String) .
\#K-PRINTER\:k2string : eq 'K2String(GeneratedAnonVar262:K) = _`(_`)(# k2string(GeneratedAnonVar262:K ), .KList) .
\#K-PRINTER\:bag2string : eq 'Bag2String(Bag2KLabel GeneratedAnonVar263:Bag(.KList)) = _`(_`)(# bag2string(GeneratedAnonVar263:Bag ), .KList) .
